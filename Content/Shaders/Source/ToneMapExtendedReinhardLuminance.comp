#version 450

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout (set = 0, binding = 0, rgba32f) uniform readonly image2D inImage;
layout (set = 1, binding = 0, rgba16f) uniform writeonly image2D outImage;

float luminance(vec3 v)
{
    return dot(v, vec3(0.2126f, 0.7152f, 0.0722f));
}

vec3 change_luminance(vec3 c_in, float l_out)
{
    float l_in = luminance(c_in);
    return c_in * (l_out / l_in);
}

vec3 reinhard_extended_luminance(vec3 v, float max_white_l)
{
    float l_old = luminance(v);
    float numerator = l_old * (1.0f + (l_old / (max_white_l * max_white_l)));
    float l_new = numerator / (1.0f + l_old);
    return change_luminance(v, l_new);
}

void main()
{
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	vec4 inPixel = imageLoad(inImage, coord);

	vec3 outColor = reinhard_extended_luminance(inPixel.rgb, 662); /* hardcode white point to scene radiance */
	imageStore(outImage, coord, vec4(outColor, 1.0));
}
