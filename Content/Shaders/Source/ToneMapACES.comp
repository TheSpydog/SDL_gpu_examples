#version 450

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout (set = 0, binding = 0, rgba32f) uniform readonly image2D inImage;
layout (set = 1, binding = 0, rgba16f) uniform writeonly image2D outImage;

const mat3x3 aces_input_matrix = mat3x3
(
	vec3(0.59719f, 0.35458f, 0.04823f),
    vec3(0.07600f, 0.90834f, 0.01566f),
    vec3(0.02840f, 0.13383f, 0.83777f)
);

const mat3x3 aces_output_matrix = mat3x3
(
    vec3( 1.60475f, -0.53108f, -0.07367f),
    vec3(-0.10208f,  1.10813f, -0.00605f),
    vec3(-0.00327f, -0.07276f,  1.07602f)
);

vec3 rtt_and_odt_fit(vec3 v)
{
    vec3 a = v * (v + 0.0245786f) - 0.000090537f;
    vec3 b = v * (0.983729f * v + 0.4329510f) + 0.238081f;
    return a / b;
}

vec3 aces_fitted(vec3 v)
{
    v = v * aces_input_matrix;
    v = rtt_and_odt_fit(v);
    return v * aces_output_matrix;
}

void main()
{
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	vec4 inPixel = imageLoad(inImage, coord);

	vec3 outColor = aces_fitted(inPixel.rgb);
	imageStore(outImage, coord, vec4(outColor, 1.0));
}
